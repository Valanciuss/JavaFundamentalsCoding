Flow control, loops and arrays

1. Write an application that will show if entered value is greater, equal or lower than 30.

2. As above but compare two values at the same time. Verify if first value is greater than 30 and second value is greater than 30, and so on.

3. As above but only one of the values has to be greater, equal or lower than 30.

4. Write an application that for any entered number between 0 and 9 will provide it's name. For example for "3" program should print "three".

5. Using nested for loops draw (parents loop iterator should be called "row", child – "column"):
triangle,
*rectangle with diagonals,
**Christmas tree.

6. Write a simple application that will simulate a shopping. Use only if-else flow control. Consider following cases:
If you would like to buy a bottle of milk – cashier will ask you for a specific amount of money. You have to enter that value and verify if it is same as the cashier asked.
If you would like to buy a bottle of wine – cashier will ask you if you are an adult and for positive answer ask for a specific amount of money.

7. Write a "divide by" application. User should be able to enter initial value that will be divided in a loop by a new value entered by a user. Division should occur as long, as entered value will be different than 0. Result of division should be rounded to the fourth decimal point and printed to the console.

8. Write a simple "echo" application, that will:print back entered string,
go to the beginning of a loop if user will enter "continue",
break the loop with a "good bye!" message, if user will enter "quit".

9. Write an application that will find biggest value within array of int variables.check your application using randomly generated array (use Random class),
check your application at least 5 times in a loop (generate random array -> print array to the console -> find biggest value -> print biggest value -> manually verify results).

10. Write an application that will find the longest char sequence within an array of type String. Test it in the same way as you have done in the previous exercise. How will you generate random char sequences?

